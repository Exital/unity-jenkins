pipeline {
    agent {
        kubernetes {
            label 'K8S-With-Docker'
        }
    }
    environment {
        IMAGE_TAG = ''
        IMAGE_REPO = ''
    }
    stages {
        stage('Checkout Source Code') {
            steps {
                cleanWs()
                dir('portfolio') {
                    script {
                        checkout([$class: 'GitSCM',
                                branches: [[name: portfolio_branch]],
                                extensions: [],
                                submoduleCfg: [],
                                userRemoteConfigs: [[url: 'https://github.com/Exital/portfolio.git']]])

                    if (portfolio_branch == 'master') {
                        IMAGE_REPO = 'portfolio-prod'
                    } else if (portfolio_branch == 'staging') {
                        IMAGE_REPO = 'portfolio-staging'
                    } else {
                        IMAGE_REPO = 'portfolio-dev'
                    }
                    echo "Using IMAGE_REPO: ${IMAGE_REPO}"
                    }
                }

                dir('gitops') {
                    script {
                        checkout([$class: 'GitSCM',
                                branches: [[name: 'master']],
                                extensions: [],
                                submoduleCfg: [],
                                userRemoteConfigs: [[url: 'https://github.com/Exital/portfolioGitOps.git']]])
                    }
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                dir('portfolio') {
                    script {
                        def commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                        IMAGE_TAG = "${portfolio_branch}_${commitHash}"
                        
                        def docker_build_params = "--label 'app.branch=${portfolio_branch}' --label 'app.commit=${commitHash}'"

                        docker.withRegistry("https://${DOCKER_REGISTRY}", 'harbor-credentials') {
                            def docker_image = docker.build("${DOCKER_REGISTRY}/portfolio/${IMAGE_REPO}:${IMAGE_TAG}", "${docker_build_params} -f Dockerfile.prod .")
                            docker_image.push()
                            sh "docker rmi ${docker_image.id}"
                        }
                    }
                }
            }
        }

        
        // stage('Update Deployment') {
        //     steps {
        //         dir('portfolio-cd') {
        //             script {            
        //                 // Define the path to the Deployment YAML file based on the branch/environment
        //                 def deploymentPath = "environments/${CHECKED_OUT_BRANCH}/deployment.yml"

        //                 // Read the Deployment YAML file
        //                 def deploymentYaml = readFile(deploymentPath)

        //                 // Update the image tag in the Deployment YAML
        //                 deploymentYaml = deploymentYaml.replaceAll("(?<=image: harbor\\.chay-techs\\.com\\/portfolio\\/portfolio-front:)\\S+", IMAGE_TAG)

        //                 // Write the modified Deployment YAML back to the file
        //                 writeFile(file: deploymentPath, text: deploymentYaml)

        //                 withCredentials([usernamePassword(credentialsId: 'github-secret-login', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
        //                     sh "git config --global user.email ${GIT_MAIL}"
        //                     sh "git config --global user.name ${GIT_USERNAME}"
        //                     sh "git add ${deploymentPath}"
        //                     sh 'git commit -m "Update Docker image tag in deployment.yml"'
        //                     sh "git push https://$USERNAME:$PASSWORD@github.com/ChayFadida/PortfolioCD.git"
        //                 }
        //             }
        //         }
        //     }
        // }
    }
}